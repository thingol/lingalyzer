analysis:

client:

feeder:

indexer:

preprocessing:
  - FUNCTION:doc-proc(): DONE
  - FUNCTION:filter(): DONE

store:
  - CONDOTION:store-integrity-error(error)

  - FUNCTION:check-store():
    * find possible states
    * IMPLEMENT
    
  - FUNCTION:create-store(): DONE

  - FUNCTION:close-store():
    * FUNCTION:merge-index()
    * FUNCTION:save-index() - if changed
   
  - FUNCTION:delete-store()
    * use handler and store-integrity-error: IMPLEMENT
    * allow forcing deletion of store with compromised integrity (keyword arg)
   
  - FUNCTION:open-store()
    * use handler and store-integrity-error: IMPLEMENT
      = handler triggers reindexing should index be missing or in an invalid state

  - db:
    * CONDOTION:db-integrity-error (also triggered by sqlite)
    * FUNCTION:init
      = DONE
      = use indexing of agent and mdoc names?
    * auxiliary functions:
      = MACRO:db-enq(): DONE
      = MACRO:db-etl(): DONE
      = FUNCTION:decode-record-spec(): DONE
      = FUNCTION:make-delete-query(): DONE
      = FUNCTION:make-insert-query(): DONE
      = FUNCTION:make-select-query(): DONE
    * content - general:
      = FUNCTION:add-rec(): DONE
      = FUNCTION:delete-rec(): DONE
      = MACRO:exists-p(): DONE
        ~ use def-falias() from org.kjerkreit.utils instead?
      = FUNCTION:get-rec-all(): DONE
      = FUNCTION:get-reb-by(): DONE
      = FUNCTION:get-rec-one(): IMPLEMENT
        ~ signal error if more than one record matches
      = FUNCTION:update-rec(): IMPLEMENT
        ~ signal error if record spec contains more than one column to match against
    * content - specific:
      = FUNCTION:get-authored(): IMPLEMENT
      = FUNCTION:get-transcribed(): IMPLEMENT
      = FUNCTION:get-wf-count(): IMPLEMENT
      = FUNCTION:update-wf-count: DONE
        ~ check for existence of wf, signal error if not found?

  - index:
    * CONDITION:index-intgerity-error(store-integrity-error): IMPLEMENT
    * chose index format
    * FUNCTION:mechanism to detect existence of index: IMPLEMENT
    * support:
      = MACRO:load-index-from-file(): DONE (but is it useful?, also misnomer)
      = MACRO:save-index-to-file(): DITTO
      = MACRO:process-hash-table(): DONE
    * high-level functions:
      = FUNCTION:load-index(): plenty of work left
      = FUNCTION:save-index(): DITTO
    * low-level functions:
      = misc:
        - FUNCTION:merge-inverse(): plenty of work left
      = loading:
        - FUNCTION:load-forward(): DONE
        - FUNCTION:load-fuzzy(): DONE
        - FUNCTION:load-inverse(): DONE
      = saving:
        - FUNCTION:save-forward(): DONE
        - FUNCTION:save-fuzzy(): DONE
        - FUNCTION:save-inverse(): DONE
test:
  - plenty of work left :)
